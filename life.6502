# machine language life in 6502 assembly (draft)

# ----- Variables -----
# $06 x-init
# $07 x-max
# $08 y-init
# $09 y-max
# $1D address of xy-loop worker
# $1E ...continued
# $CE xy-offset calculator result
# $CF ...continued
# $D7 random byte
# $E3
# $FA graph-X
# $FB graph-Y
# $FC
# $FD
# $FE
# $1000 current grid
# $1800 next grid

# ----- Subroutines -----
# $03D0 random byte generator (13)
# $03DD random byte initializer (5)
# $???? xy-offset calculator
# $???? xy-loop (33)
# $???? initialize grid (randomly)
# $???? plot grid
# $???? update
# $???? transfer memory

# ----- Initializations -----
$300
JSR $FB40  reset low-res screen
JSR $03F0  initialize random byte generator

# ----- Main -----
# Loop elapsed time
# Initialize board randomly
# Plot board
# Next generation

- notes -

STA $30    store color with value of accumulator
LDA $FA    load accumulator with GRAPHX
LDY $FB    load y-register with GRAPHY
JSR $F800  call plotting subroutine using X=A,Y=Y,COLOR=$30

what if there was a single X, Y loop and swappable functions inside?

outer gen loop
	# init board
	init 0, 39, 0, 39
	function = random-board
	JSR xy-loop

	# plot board
	init 0, 39, 0, 39
	function = plot
	JSR xy-loop

	# next gen
	init 1, 38, 1, 38
	function = update
	JSR xy-loop

	# update counts
	init 0, 39, 0, 39
	function = copy-n2g
